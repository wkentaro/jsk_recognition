<launch>

  <arg name="gui" default="true" />

  <!--
  <include file="$(find jsk_pcl_ros)/sample/include/play_rosbag_arc2017_depth_insensible_3objects.launch" />
  -->

  <group if="$(arg gui)">
    <node name="rviz"
          pkg="rviz" type="rviz"
          args="-d $(find jsk_pcl_ros)/sample/rviz/estimate_3d_from_label.rviz">
    </node>
  </group>

  <arg name="INPUT_IMAGE" value="/camera/rgb/image_rect_color" />

  <arg name="MANAGER" value="/a_manager" />
  <node name="a_manager" pkg="nodelet" type="nodelet" args="manager" />

  <node name="mask_image_generator"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/MaskImageGenerator $(arg MANAGER)">
    <remap from="~input" to="$(arg INPUT_IMAGE)" />
    <rosparam>
      offset_x: 0
      offset_y: 0
      width: 640
      height: 300
    </rosparam>
  </node>
  <rosparam ns="label_names" file="$(find jsk_arc2017_common)/config/label_names.yaml" />
  <node name="fcn_object_segmentation"
        pkg="jsk_perception" type="fcn_object_segmentation.py">
    <remap from="~input" to="$(arg INPUT_IMAGE)" />
    <rosparam subst_value="true">
      gpu: 0
      backend: chainer
      model_name: fcn32s
      model_file: $(find jsk_arc2017_common)/data/models/fcn32s_arc2017_datasetv2_cfg003_20170704.npz
    </rosparam>
    <remap from="~target_names" to="label_names" />
  </node>
  <node name="apply_context_to_label_proba"
        pkg="jsk_perception" type="apply_context_to_label_probability">
    <remap from="~input" to="fcn_object_segmentation/output/proba_image" />
    <rosparam>
      candidates: []
    </rosparam>
  </node>
  <node name="apply_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/ApplyMaskImage $(arg MANAGER)">
    <remap from="~input" to="apply_context_to_label_proba/output/label" />
    <remap from="~input/mask" to="mask_image_generator/output" />
    <rosparam>
      clip: false
    </rosparam>
  </node>

  <node name="label_image_decomposer"
        pkg="jsk_perception" type="label_image_decomposer.py">
    <remap from="~input" to="$(arg INPUT_IMAGE)" />
    <remap from="~input/label" to="apply_mask_image/output" />
    <rosparam>
      queue_size: 100
    </rosparam>
    <remap from="~label_names" to="label_names" />
  </node>
  <node name="label_to_mask"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/LabelToMaskImage $(arg MANAGER)">
    <remap from="~input" to="apply_mask_image/output" />
    <rosparam>
      label_value: 24
    </rosparam>
  </node>
  <node name="mask_to_point_indices"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/MaskImageToPointIndices $(arg MANAGER)">
    <remap from="~input" to="label_to_mask/output" />
  </node>
  <node name="extract_indices"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ExtractIndices $(arg MANAGER)">
    <remap from="~input" to="/camera/depth_registered/points" />
    <remap from="~indices" to="mask_to_point_indices/output" />
    <rosparam>
      keep_organized: true
      approximate_sync: true
      queue_size: 200
    </rosparam>
  </node>
  <node name="resize_points_publisher"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ResizePointsPublisher $(arg MANAGER)">
    <remap from="~input" to="extract_indices/output" />
    <rosparam>
      step_x: 2
      step_y: 2
    </rosparam>
  </node>
  <group ns="/camera/rgb">
    <node name="half"
          pkg="nodelet" type="nodelet"
          args="load image_proc/resize $(arg MANAGER)">
      <remap from="image" to="image_rect_color" />
      <remap from="~image" to="~image_rect_color" />
      <rosparam>
        scale_width: 0.5
        scale_height: 0.5
      </rosparam>
    </node>
  </group>
  <node name="euclidean_clustering"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/EuclideanClustering $(arg MANAGER)">
    <remap from="~input" to="resize_points_publisher/output" />
    <rosparam>
      min_size: 100
      max_size: 100000
      tolerance: 0.05
    </rosparam>
  </node>
  <node name="cluster_indices_to_label"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/ClusterPointIndicesToLabel $(arg MANAGER)">
    <remap from="~input/camera_info" to="/camera/rgb/half/camera_info" />
    <remap from="~input/cluster_indices" to="euclidean_clustering/output" />
    <remap from="~output" to="~half/output" />
  </node>
  <group ns="cluster_indices_to_label">
    <node name="resize"
          pkg="nodelet" type="nodelet"
          args="load image_proc/resize $(arg MANAGER)">
      <remap from="image" to="half/output" />
      <remap from="~image" to="output" />
      <rosparam>
        interpolation: 0  # Nearest
        scale_height: 2.0
        scale_width: 2.0
      </rosparam>
    </node>
  </group>
  <node name="label_image_decomposer_instances"
        pkg="jsk_perception" type="label_image_decomposer.py">
    <remap from="~input" to="$(arg INPUT_IMAGE)" />
    <remap from="~input/label" to="cluster_indices_to_label/output" />
    <rosparam>
      approximate_sync: true
      queue_size: 100
    </rosparam>
  </node>
  <group ns="/camera/depth_registered/sw_registered">
    <node name="image_rect_view"
          pkg="image_view" type="image_view">
      <remap from="image" to="image_rect" />
      <remap from="~output" to="~" />
      <rosparam>
        gui: false
        colormap: 2
        min_image_value: 0.5
        max_image_value: 2.0
      </rosparam>
    </node>
  </group>
  <node name="depth_estimation_from_object_depth_prior"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/DepthEstimationFromObjectDepthPrior $(arg MANAGER)">
    <remap from="~input/depth" to="/camera/depth_registered/sw_registered/image_rect" />
    <remap from="~input/label" to="cluster_indices_to_label/output" />
    <remap from="~output" to="~output" />
  </node>
  <group ns="depth_estimation_from_object_depth_prior">
    <node name="output_view"
          pkg="image_view" type="image_view">
      <remap from="image" to="output" />
      <remap from="~output" to="~" />
      <rosparam>
        gui: false
        colormap: 2
        min_image_value: 0.5
        max_image_value: 2.0
      </rosparam>
    </node>
    <!--
    <node name="point_cloud_xyzrgb"
          pkg="nodelet" type="nodelet"
          args="load depth_image_proc/point_cloud_xyzrgb $(arg MANAGER)">
      <remap from="rgb/camera_info" to="/camera/rgb/camera_info" />
      <remap from="rgb/image_rect_color" to="/camera/rgb/image_rect_color" />
      <remap from="depth_registered/image_rect" to="output" />
      <rosparam>
        approximate_sync: true
        queue_size: 100
      </rosparam>
    </node>
    <node name="point_cloud_xyzl"
          pkg="nodelet" type="nodelet"
          args="load depth_image_proc/point_cloud_xyzl $(arg MANAGER)">
      <remap from="label/camera_info" to="/camera/rgb/camera_info" />
      <remap from="label/image_rect" to="/apply_mask_image/output" />
      <remap from="depth_registered/image_rect" to="output" />
      <remap from="depth_registered/points" to="points" />
      <rosparam>
        queue_size: 50
      </rosparam>
    </node>
    -->
    <node name="point_cloud_xyzll"
          pkg="nodelet" type="nodelet"
          args="load depth_image_proc/point_cloud_xyzll $(arg MANAGER)">
      <remap from="label/camera_info" to="/camera/rgb/camera_info" />
      <remap from="label/label_class" to="/apply_mask_image/output" />
      <remap from="label/label_instance" to="/cluster_indices_to_label/output" />
      <remap from="depth_registered/image_rect" to="output" />
      <remap from="depth_registered/points" to="points" />
      <rosparam>
        queue_size: 50
      </rosparam>
    </node>
  </group>

  <group ns="/camera">
    <node name="point_cloud_xyzll"
          pkg="nodelet" type="nodelet"
          args="load depth_image_proc/point_cloud_xyzll $(arg MANAGER)">
      <remap from="label/camera_info" to="rgb/camera_info" />
      <remap from="label/label_class" to="/apply_mask_image/output" />
      <remap from="label/label_instance" to="/cluster_indices_to_label/output" />
      <remap from="depth_registered/image_rect" to="depth_registered/sw_registered/image_rect" />
      <remap from="depth_registered/points" to="label/depth_registered/points" />
      <rosparam>
        queue_size: 50
      </rosparam>
    </node>
  </group>

  <node name="pointcloud_concatenate_data_sync"
        pkg="nodelet" type="nodelet"
        args="standalone pcl/PointCloudConcatenateDataSynchronizer $(arg MANAGER)">
    <rosparam>
      output_frame: camera_rgb_optical_frame
      input_topics:
        - /camera/label/depth_registered/points
        - /depth_estimation_from_object_depth_prior/points
    </rosparam>
  </node>
  <node name="pointcloud_xyzll_decomposer"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/PointCloudXYZLLDecomposer $(arg MANAGER)">
    <remap from="~input" to="pointcloud_concatenate_data_sync/output" />
  </node>

</launch>
